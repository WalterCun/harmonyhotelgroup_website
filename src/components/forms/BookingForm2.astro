---
// src/components/BookingForm.astro
import flatpickr from "flatpickr";
import { Spanish } from "flatpickr/dist/l10n/es.js";
import { z } from "zod";

const uniqueCities = ["Quito, Ecuador", "Lima, Per√∫", "Bogot√°, Colombia"];
const adultOptions = [...Array(8).keys()]
	.map((i) => String(i + 1))
	.concat("Group");
const childrenOptions = Array.from({ length: 10 }, (_, i) => String(i));
const roomOptions = Array.from({ length: 10 }, (_, i) => String(i + 1));
const groupRoomTypeOptions = [
	{ value: "shared_room", label: "Habitaci√≥n compartida" },
	{ value: "shared_beds", label: "Camas compartidas" },
	{ value: "independent_rooms", label: "Habitaciones independientes" },
];
const vehicleTypeOptions = [
	{ value: "buseta", label: "Buseta" },
	{ value: "furgoneta", label: "Furgoneta" },
	{ value: "bus", label: "Bus" },
	{ value: "flota_vehiculos", label: "Flota de veh√≠culos" },
	{ value: "cooperativa_transporte", label: "Cooperativa" },
	{ value: "otro", label: "Otro" },
];

// Zod schema shorthand para validaci√≥n
const bookingSchema = z.object({
	city: z.string().min(1),
	from: z.string().min(1),
	to: z.string().min(1),
	adults: z.string().min(1),
	rooms: z.string().min(1),
	children: z.string().optional(),
	childrenAges: z.array(z.number().min(0).max(17)).optional(),
	groupAdults: z.coerce.number().optional(),
	groupChildrenUnder5: z.coerce.number().min(0).optional(),
	groupChildrenUnder12: z.coerce.number().min(0).optional(),
	breakfast: z.boolean().default(false),
	parking: z.boolean().default(false),
	largeGroupVehicleType: z.string().optional(),
});
---

<section class="relative z-10 w-full mt-12 md:mt-16 lg:mt-20 pb-12 px-4">
    <div class="container max-w-4xl mx-auto">
        <div class="bg-background/90 backdrop-blur-sm shadow-2xl p-2 sm:p-3 md:p-2 rounded-lg">
            <header class="text-center pb-2 pt-4">
                <h2 class="text-2xl font-bold text-primary">Reserva tu estancia</h2>
                <p class="text-sm text-muted-foreground">El mejor hotel para ti</p>
            </header>

            <form id="booking-form" class="space-y-3 p-1.5 md:p-1">
                <!-- Ciudad -->
                <div class="w-full">
                    <label class="flex flex-col text-sm font-medium text-foreground/80 mb-1">
                        Ciudad
                        <select id="city" name="city"
                                class="h-10 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50">
                            <option value="">Selecciona ciudad</option>
                            {uniqueCities.map(c =>
                                    <option value={c}>{c}</option>)}
                        </select>
                    </label>
                </div>

                <!-- Fechas, adultos, ni√±os, habitaciones -->
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-x-2.5 gap-y-3">
                    {/* Date Range */}
                    <div class="lg:col-span-2 flex flex-col">
                        <label class="flex items-center text-sm font-medium text-foreground/80 mb-1">
                            <span class="mr-1.5">üìÖ</span> Fechas
                        </label>
                        <div class="grid grid-cols-2 gap-2">
                            <label for="date-from"></label><input id="date-from" name="from" placeholder="Check-in"
                                                                  class="h-10 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50"/>
                            <label for="date-to"></label><input id="date-to" name="to" placeholder="Check-out"
                                                                class="h-10 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50"/>
                        </div>
                    </div>

                    {/* Adultos */}
                    <div>
                        <label class="flex flex-col text-sm font-medium text-foreground/80 mb-1">
                            <span class="mr-1.5">üë•</span> Adultos
                            <select id="adults" name="adults"
                                    class="h-10 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50">
                                {adultOptions.map(o => (
                                        <option value={o}>
                                            {o === "Group" ? "Grupo" : `${o} adulto${o !== "1" ? "s" : ""}`}
                                        </option>
                                ))}
                            </select>
                        </label>
                    </div>

                    {/* Ni√±os (solo si no es Grupo) */}
                    <div id="children-wrapper">
                        <label class="flex flex-col text-sm font-medium text-foreground/80 mb-1">
                            <span class="mr-1.5">üòä</span> Ni√±os
                            <select id="children" name="children"
                                    class="h-10 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50">
                                {childrenOptions.map(o => (
                                        <option value={o}>{`${o} ni√±o${o !== "1" ? "s" : ""}`}</option>
                                ))}
                            </select>
                        </label>
                    </div>

                    {/* Habitaciones (no Grupo) */}
                    <div id="rooms-label">
                        <label class="flex flex-col text-sm font-medium text-foreground/80 mb-1">
                            <span class="mr-1.5">üõèÔ∏è</span> Habitaciones
                            <select id="rooms" name="rooms"
                                    class="h-10 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50">
                                {roomOptions.map(o => (
                                        <option value={o}>{`${o} habitaci√≥n${o !== "1" ? "es" : ""}`}</option>
                                ))}
                            </select>
                        </label>
                    </div>
                </div>

                {/* Edades de ni√±os din√°micas */}
                <div id="children-ages"
                     class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-2"></div>

                {/* Detalles de grupo */}
                <div id="group-details" class="hidden space-y-2 pt-2 border-t border-border">
                    <p class="text-sm font-medium text-primary flex items-center">
                        <span class="mr-1.5">üë•</span> Detalles de Grupo
                    </p>
                    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-2">
                        <label class="flex flex-col text-sm text-foreground/80">
                            Adultos en grupo
                            <input type="number" name="groupAdults" min="1" placeholder="e.g. 10"
                                   class="h-9 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50"/>
                        </label>
                        <label class="flex flex-col text-sm text-foreground/80">
                            Ni√±os &lt;5
                            <input type="number" name="groupChildrenUnder5" min="0" placeholder="e.g. 2"
                                   class="h-9 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50"/>
                        </label>
                        <label class="flex flex-col text-sm text-foreground/80">
                            Ni√±os &lt;12
                            <input type="number" name="groupChildrenUnder12" min="0" placeholder="e.g. 3"
                                   class="h-9 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50"/>
                        </label>
                        <label class="flex flex-col text-sm text-foreground/80">
                            Tipo de habitaci√≥n
                            <select name="rooms"
                                    class="h-9 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50">
                                {groupRoomTypeOptions.map(o =>
                                        <option value={o.value}>{o.label}</option>)}
                            </select>
                        </label>
                    </div>
                </div>

                {/* Desayuno / Parking / Veh√≠culo */}
                <div class="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 pt-1">
                    <label class="flex items-center space-x-1.5">
                        <input type="checkbox" name="breakfast" class="h-4 w-4"/>
                        <span class="text-sm">Desayuno</span>
                    </label>
                    <label id="parking-wrapper" class="flex items-center space-x-1.5">
                        <input type="checkbox" name="parking" checked class="h-4 w-4"/>
                        <span class="text-sm">Parking</span>
                    </label>
                    <div id="vehicle-wrapper" class="hidden flex-grow">
                        <label class="flex items-center space-x-1">
                            <select name="largeGroupVehicleType"
                                    class="h-10 text-sm border rounded-md px-2 flex-grow focus:ring focus:ring-primary/50">
                                {vehicleTypeOptions.map(o =>
                                        <option value={o.value}>{o.label}</option>)}
                            </select>
                            <span class="text-sm whitespace-nowrap">Veh√≠culo grupo</span>
                        </label>
                    </div>
                </div>

                <button type="submit"
                        class="w-full bg-primary hover:bg-primary/90 text-primary-foreground text-base py-2.5 rounded-md flex justify-center items-center">
                    üõèÔ∏è Reservar ahora
                </button>
            </form>
        </div>
    </div>
</section>

<script type="module">
    flatpickr("#date-from", {locale: Spanish, minDate: "today"});
    flatpickr("#date-to", {locale: Spanish, minDate: "today"});

    const formEl = document.getElementById("booking-form");
    const adultsEl = document.getElementById("adults");
    const childrenEl = document.getElementById("children");
    const childrenAgesCt = document.getElementById("children-ages");
    const groupDet = document.getElementById("group-details");
    const roomsLbl = document.getElementById("rooms-label");
    const parkingWrap = document.getElementById("parking-wrapper");
    const vehicleWrap = document.getElementById("vehicle-wrapper");

    function updateChildrenAges() {
        const cnt = +childrenEl.value;
        childrenAgesCt.innerHTML = "";
        for (let i = 0; i < cnt; i++) {
            const lbl = document.createElement("label");
            lbl.className = "flex flex-col text-sm text-muted-foreground mb-0.5";
            lbl.innerHTML = `Edad ni√±o ${i + 1}
        <input type="number" name="childrenAges[${i}]" min="0" max="17"
          class="h-9 text-sm border rounded-md px-2 focus:ring focus:ring-primary/50"/>`;
            childrenAgesCt.append(lbl);
        }
    }

    function toggleGroup() {
        const isGroup = adultsEl.value === "Group";
        groupDet.classList.toggle("hidden", !isGroup);
        roomsLbl.classList.toggle("hidden", isGroup);
        parkingWrap.classList.toggle("hidden", isGroup);
        vehicleWrap.classList.toggle("hidden", !isGroup);
        if (isGroup) {
            childrenEl.value = "0";
            updateChildrenAges();
        }
    }

    childrenEl.addEventListener("change", updateChildrenAges);
    adultsEl.addEventListener("change", toggleGroup);

    formEl.addEventListener("submit", e => {
        e.preventDefault();
        const data = Object.fromEntries(new FormData(formEl).entries());
        data.breakfast = !!data.breakfast;
        data.parking = !!data.parking;
        data.childrenAges = Array.from(formEl.querySelectorAll("input[name^=childrenAges]"))
            .map(i => Number(i.value));
        const res = bookingSchema.safeParse(data);
        if (!res.success) {
            alert("Errores:\n" + res.error.errors.map(e => e.message).join("\n"));
            return;
        }
        let msg = `Reserva\nCiudad: ${data.city}\nCheck-in: ${data.from}\nCheck-out: ${data.to}\n`;
        if (data.adults === "Group") {
            msg += `Grupo: ${data.groupAdults} adultos\nNi√±os<5: ${data.groupChildrenUnder5 || 0}\nNi√±os<12: ${data.groupChildrenUnder12 || 0}\nHabitaciones: ${data.rooms}\nVeh√≠culo: ${data.largeGroupVehicleType}\n`;
        } else {
            msg += `Habitaciones: ${data.rooms}\nAdultos: ${data.adults}\n`;
            if (+data.children > 0) msg += `Ni√±os: ${data.children} (edades: ${data.childrenAges.join(", ")})\n`;
            msg += `Desayuno: ${data.breakfast ? "S√≠" : "No"}\nParking: ${data.parking ? "S√≠" : "No"}\n`;
        }
        msg += "Por favor confirmar disponibilidad.";
        window.open(`https://wa.me/593996146471?text=${encodeURIComponent(msg)}`, "_blank");
    });

    // auto-city by IP
    fetch("http://ip-api.com/json")
        .then(r => r.json())
        .then(d => {
            const lc = d.country?.toLowerCase();
            if (!lc) return;
            const m = uniqueCities.find(c => c.toLowerCase().includes(lc));
            if (m) document.getElementById("city").value = m;
        })
        .catch(() => {
        });
</script>
