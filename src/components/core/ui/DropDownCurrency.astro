---
const currencies = [
  { code: "USD", symbol: "$", label: "USD" },
  { code: "EUR", symbol: "â‚¬", label: "EUR" },
];
interface Props {
  lang: string;
}

const { lang } = Astro.props;
---

<div class="relative">
    <button id="currency-toggle" class="flex items-center text-white hover:text-primary transition-colors duration-200 cursor-pointer">
        <span id="current-currency">USD</span>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 ml-1">
            <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
        </svg>
    </button>

    <div id="currency-dropdown" class="absolute top-full right-0 mt-2 w-32 bg-white shadow-lg rounded-md py-1 z-10 hidden">
        {currencies.map(currency => (
                <button
                        data-currency-code={currency.code}
                        data-currency-symbol={currency.symbol}
                        class="w-full text-left px-4 py-2 text-neutral-700 hover:bg-primary hover:text-white transition-colors duration-200"
                >
                    <span class="mr-2">{currency.symbol}</span>{currency.label}
                </button>
        ))}
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const currencyToggle = document.getElementById('currency-toggle');
        const currencyDropdown = document.getElementById('currency-dropdown');
        const currentCurrency = document.getElementById('current-currency');
        const currencyButtons = document.querySelectorAll('[data-currency-code]');

        currencyToggle?.addEventListener('click', (e) => {
            e.stopPropagation();
            currencyDropdown?.classList.toggle('hidden');
        });

        // Add mouseleave event listener to hide dropdown when cursor leaves
        currencyDropdown?.addEventListener('mouseleave', () => {
            currencyDropdown.classList.add('hidden');
        });

        currencyButtons.forEach(button => {
            button.addEventListener('click', () => {
                const currencyCode = button.getAttribute('data-currency-code');

                if (currentCurrency && currencyCode) {
                    currentCurrency.textContent = currencyCode;
                }

                const event = new CustomEvent('currencychange', {
                    detail: {
                        code: currencyCode,
                        symbol: button.getAttribute('data-currency-symbol')
                    }
                });
                document.dispatchEvent(event);

                currencyDropdown?.classList.add('hidden');
            });
        });

        document.addEventListener('click', () => {
            currencyDropdown?.classList.add('hidden');
        });
    });
</script>