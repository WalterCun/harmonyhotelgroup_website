---
import { Image } from "astro:assets";
import { createLogger } from "~/utils";
import { LANGUAGES, structUrl, trans } from "~/utils/translations";

interface Props {
    lang: string;
}

const logger = createLogger(true, "dropdown-language");

const { lang } = Astro.props;
const currentLanguage = LANGUAGES[lang] || LANGUAGES.es;
---

<div class="relative">
    <button
        id="language-toggle"
        aria-label="Cambiar idioma"
        aria-haspopup="true"
        aria-expanded="false"
        class="flex items-center gap-2 px-3 py-1.5 rounded-md text-white hover:text-primary transition-colors cursor-pointer"
    >
        {
            currentLanguage.flag && (
                <Image
                    src={currentLanguage.flag}
                    alt=""
                    width="20"
                    height="20"
                    class="shrink-0 object-cover"
                />
            )
        }
        <span id="current-language" class="text-sm font-medium">
            {
                currentLanguage.name ||
                    trans(lang, "components.ui.dropdown.languagedropdown")
            }
        </span>
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            class="w-4 h-4 shrink-0"
            aria-hidden="true"
        >
            <path
                fill-rule="evenodd"
                d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
                clip-rule="evenodd"></path>
        </svg>
    </button>

    <div
        id="language-dropdown"
        class="absolute top-full right-0 mt-0 w-max bg-white shadow-lg rounded-md py-1 z-10 hidden"
    >
        {
            Object.entries(LANGUAGES).map((lang) => {
                const [code, value] = lang;
                return (
                    <div class="flex items-center">
                        <a
                            href={structUrl(Astro.url, code)}
                            data-lang-code={code}
                            class="flex items-center w-full text-left px-4 py-2 text-neutral-700  hover:bg-primary hover:text-white transition-colors duration-200"
                        >
                            <div class="shrink-0">
                                <Image src={value.flag} alt="" width="20" />
                            </div>
                            <span class="ml-2">{value.name}</span>
                        </a>
                    </div>
                );
            })
        }
    </div>
</div>

<script>
    import { setLanguage } from "~/utils/translations";

    document.addEventListener("DOMContentLoaded", () => {
        const languageToggle = document.getElementById("language-toggle");
        const languageDropdown = document.getElementById("language-dropdown");
        const languageButtons = document.querySelectorAll("[data-lang-code]");

        languageToggle?.addEventListener("click", (e) => {
            e.stopPropagation();
            languageDropdown?.classList.toggle("hidden");

            if (!languageDropdown?.classList.contains("hidden")) {
            }
        });

        // Add mouseleave event listener to hide dropdown when cursor leaves
        languageDropdown?.addEventListener("mouseleave", () => {
            languageDropdown.classList.add("hidden");
        });

        document.addEventListener("click", () => {
            languageDropdown?.classList.add("hidden");
        });
    });
</script>
